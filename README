/*
* Simpatico - Simulation Package for Polymeric and Molecular Liquids
*
* Copyright 2010, David Morse (morse@cems.umn.edu)
* Distributed under the terms of the GNU General Public License.
*/

Directory structure:
--------------------

Simpatico may be obtained either by download from the project website or 
(for developers) by cloning a copy of the git version control repository.
In either case, the root directory for the package is named simpatico/. 

Documentation:
--------------

Documentation for Simpatico is prepared using the Doxygen utility
(www.doxygen.org).  Doxygen is used to create html web pages that 
are deposited in the directory doc/html/ (i.e., trunk/doc/html in
the repository).  These web pages are created from *.dox files in 
the directory simpatico/src/dox/, which contain the text for a set 
of introductory web pages, and from comments extracted from the C++
source code. The resulting html pages are not retained in the git
repository, but are included in the downloadable distribution. 
These html pages are also accessible via the Simpatico web page.

If you are using a downloaded version, it should include this
html documentation. You can read it by pointing a browser at any 
*.html file in the simpatico/doc/html directory, and then using 
the links at the top of any page to navigate to the main manual 
page.  The source file for the main page is called index.html.

If you are using a version that was checked out from the
repository, which contains no html documentation, you can use
dOxygen to regenerate these web pages.  Before, or instead of,
regenerating the html pages, you can also begin by reading the 
ascii source files for the introductory web pages in the *.dox 
files src/dox directory.

The file src/dox/compile.dox contains instructions for how to 
use dOxygen to regenerate the html documentation, if necessary. 
This requires that dOxygen be installed. The basic instruction 
(after installing dOxygen) is to cd to the src/ directory and 
type "make doc".  

Compilation (Simple Version):
-----------------------------

Complete information about compilation is given in src/dox/compile.dox, 
or in the corresponding html web page in the doc/html directory. Here 
is the short version:

1) Change directory (cd) to the root simpatico/ directory. 
   This is the directory that contains this README file. 

2) Enter "./configure".

3) Enter "cd src" to change directory (cd) to the src/ directory. 

4) Check the makefile variables in the file src/compiler.mk, and make
   any required changes.  The value of the variable ROOT_DIR should 
   be the absolute path to the root simpatico/ directory. If necessary, 
   change the choice of compiler (the default choice is gcc, the gnu
   C++ compiler) and/or compiler options in this file. 

5) Enter "make all" from within the src/ directory.

The above procedure should compile all the classes in the src/util, 
src/inter, and src/mcMd subdirectories, place libraries in the lib/ 
directory, and compile the main programs mcSim.cpp and mdSim.cpp in 
simpatico/src/main.  By default, the resulting executables are 
installed in the simpatico/bin/ directory, and are named mcSim and 
mdSim. 

The "./configure" script only needs to be invoked once, before the 
first time you compile any of the source files.

Compiling Domain Decomposition MD:
----------------------------------

The above procedure does not compile the domain decomposition MD
code in the src/ddMd directory. To compile this, after invoking
the configure script, you must:

1) Choose an MPI compiler (gcc_mpi or intel_mpi) in the file
src/compiler.mk to enable MPI.

2) Change directory to src/main and type "make ddMd". 

This should cause compilation of MPI enabled versions of the code 
in the src/util/, src/inter/ and src/ddMd directories, create three 
corresponding static library (*.a) files in the lib/ directory, and 
create an executable named ddSim in the bin/ directory.

Enabling Automatic Dependency Generation
----------------------------------------

The procedures described above do not enable automatic dependency 
generation, which is disabled by default.  The html documentation and 
the file simpatico/src/dox/compile.dox contain information about how 
to enable this feature. Automatic dependency generation is an important 
convenience for developers but not necessary for users who do not plan 
to modify the code.  Until dependency generation is enabled, however, 
the only safe way to recompile the program after changing any source
file is to do a clean rebuild by typing "make clean" from the src/
directory and repeating the above compilation instructions. 

Makefile special targets:
-------------------------

These may all be issued from within the simpatico/src/ directory:

make all       compile all class files, create libraries and executables
make clean     remove all *.o, library and executables created by "all".
make doc       recreate doxygen documentation in doc/html
make cleandoc  remove all files from doc/html

There is also a makefile in almost every subdirectory of the src/ 
directory.  In each such directory, entering "make all" will compile
all of the source files in the tree rooted at that directory (i.e., 
the directory from which the command is issued and all of its 
subdirectories), excluding test files. Entering "make clean" from
any such directory removes all of the object files and libraries
produced by "make all".

