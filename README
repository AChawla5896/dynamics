/*
* Simpatico - Simulation Package for Polymeric and Molecular Liquids
*
* Copyright 2010 - 2017 The Regents of the University of Minnesota
* Distributed under the terms of the GNU General Public License.
*/

Simpatico is a C++ package for Molecular Dynamics (MD), Monte Carlo 
(MC), and hybrid MC simulations of classical mechanical models of 
polymeric and molecular liquids. It has thus far been used
primarily for simulating course-grained models of polymer liquids. 
The package contains:

- An efficient program for parallel MD simulations, named ddSim.

- Programs for Monte Carlo (MC) and molecular dynamics (MD) 
  simulations on a single processor, named mcSim and mdSim.

The parallel MD program ddSim uses a spatial domain decomposition for 
parallelization.
   
Simpatico is distributed only in source code form, and so must be 
compiled from source.

Getting the Source Code:
------------------------

Simpatico source code may be obtained by using git to clone the github repository 
from the repository page
                                                                             
<https://github.com/dmorse/simpatico>.

Use the command

git clone --recursive https://github.com/dmorse/simpatico.git

The --recursive option is necessary to clone some git submodules that are 
maintained in separate repositories. 

Documentation:
--------------

A recent copy of the web manual for simpatico is available online, at

<http://dmorse.github.com/simpatico/index.html>.

This manual that provide both user and developer documentation. 

The web manual for Simpatico is prepared using the Doxygen utility 
(www.doxygen.org), and can be regenerated by users. Running doxygen 
creates html web pages that are deposited in the directory named 
doc/html/ within a users copy of the simpatico working tree. These 
web pages are created from both comments extracted from the C++ 
source code and from a set of text files with the file extension
*.dox. Text files containing text for the introductory sections 
of the web manual are located in the directory doc/manual/, and
are readable in any text editor. 

After getting a copy of the source code (either by download or by 
cloning the git repository), you can use dOxygen to generate a local 
copy of the html documentation within the simpatico/doc/html directory 
of the source code tree.  This requires that dOxygen be installed on 
your computer and that the executable be in a directory in your PATH. 
The basic instructions (after dOxygen is installed) are:

  - cd to the simpatico/doc directory

  - Enter "make html"

This should create many html files in the simpatico/doc/html 
directory. To begin reading the documentation, point a browser at 
the file simpatico/doc/html/index.html, which is the main page.

Compiling:
----------

The simpatico source code is ansi standard C++, and must be 
compiled from source. The single-processor versions of the
mcSim and mdSim MC and MD simulation program do not depend
on any external libraries. Multi-processor programs (ddSim 
and multi-processor versions of mcSim and mdSim) require an 
MPI library. The build system requires the gnu version of 
the unix make utility and a python interpreter.

Complete instructions for compiling various versions of Simpatico 
are given in the text file simpatico/doc/manual/user/compile.dox, 
or in the corresponding html web page in the doc/html directory.
Short instructions for compiling the default single-processor 
versions of mcSim and mdSim (for the impatient) are:

- Add the simpatico/bin directory to your linux command search
  PATH environment variable, and add the simpatico/scripts/python 
  directory to your PYTHONPATH environment variable.

- cd to the simpatico/ root directory

- Enter "./setup" from this root directory to run a setup script

- Enter "make mcMd" from the same directory

The resulting executables, named "mcSim" and "mdSim", will 
be installed in the simpatico bin/ directory. Please see the 
text file and html documentation mentioned above for further 
instructions for compiling multi-processor programs.

Instructions for enabling or disabling a variety of optional 
compile-time features are also given in the html documentation. 

