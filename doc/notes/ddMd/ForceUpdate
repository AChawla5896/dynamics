In order to get reverse communication working:

1) Add methods to Buffer to pack and unpack forces

   Status: Done, not tested.

2) Add Exchanger::forceUpdate() method to send all forces back along 
   reverse path.

   Status: Done, not tested.

3) Pass forceUpdateFlag as an argument to Cell::getNeighbors, with
   a default value of false. Atoms in a neighboring cell should be 
   included in the array of neighbors if:

   if (cellId > cellIdSelf || (forceUpdateFlag && isGhost)) { ... }

   Status: Done, not tested.

4) Pass bool variable forceUpdateFlag to PairList::build, which
   calls Cell::getNeighbors. 

   Status: Done, not tested.

5) Add bool forceUpdateFlag_ member to PairPotential. Pass value
   to Cell::getNeighbors within PairPotential::findNeighbors().

   Status: Done, not tested.

6) Modify PairPotentialImpl.h so as to always add forces to both
   atoms if forceUpdateFlag.

   Status: Done, not tested.

   Possible alternative: Pass forceUpdateFlag as an argument to the 
   findNeighbors and addForces methods.

7) Add bool member forceUpdate_ to MdIntegrator.  Modify subclasses 
   so as to call forceUpdate method after calculating forces.

   Possible alternative: Make forceUpdate_ a local variable of the
   run method, copied from the parent Simulation.

8) Add bool forceUpdateFlag to DdMd::Simulation. Make setter function 
   sets values for Integrator and PairPotential.

9) Modify DdMd::Simulation::zeroForces so as to zero ghost forces iff
   Simulation::forceUpdateFlag is set.


Stage #1: Use reverse communication for pair forces, and nothing else.
---------

 - Leave selection of ghosts in Exchanger unchanged. It's okay if we 
   send some unnecessary ghost - this should not effect correctness.

 - Leave covalent potentials unchanged: It's okay if we use reverse 
   update only for pairs, and repeat the force calculation for bonded
   interactions.

 - Unit test by adding tests that involves the pair potential to 
   ddMd/communicate/tests/ExchangerTest.h

Stage #2:
--------

 - Add velocityCommunicateFlag, and allow for possible forward
   communication of velocities.

 - Test DPD integrator

Stage #3:
--------

 - Suppress communication of (some) unnecesary nonbonded ghosts.


Stage #4: Reverse communication for bonded forces (if desired)
---------

  - Modify exchanger to keep covalent groups only on one processor.
    The group migrates with the "owner" atom.

  - Modify covalent potentials to calculate forces for all atoms in 
    Group, if forceCommFlag.

  - Send only necesary bonded ghosts.

