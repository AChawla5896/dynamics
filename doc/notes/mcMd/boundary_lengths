ConfigIos: Probably must be orthogonal
./configIos/LammpsConfigIo.cpp:      Vector lengths = boundary().lengths();
./configIos/PmcConfigIo.cpp:      out << Label("lengths") << boundary().lengths() << endl;

Constant pressure algorithms: Must be orthogonal as written
./mcMoves/common/HybridNphMdMove.cpp:   Vector oldLengths = system().boundary().lengths();
./mdIntegrators/NphIntegrator.cpp:      Vector lengths  = system().boundary().lengths();

Algorithms for constant pressure ensemble: As written, must be orthogonal
./analyzers/system/BoundaryAverage.cpp:      lengths = system().boundary().lengths();
./analyzers/system/CompositionProfile.cpp:      blengths = system().boundary().lengths();

Already generalized correctly:
./neighbor/CellList.cpp:        lengths_ = boundary.lengths();

Used to reconstruct true positions from shifts in MSD analyzers:
./analyzers/system/AtomMSD.cpp:     Vector     lengths = system().boundary().lengths();
./analyzers/system/ComMSD.cpp:      Vector     lengths = system().boundary().lengths();

Need to generalize MPI code:
./perturb/ReplicaMove.cpp:      myBoundary = system().boundary().lengths();

Why does this need to know anything about the boundary?
./species/Linear.cpp:           system.boundary().setLengths(boundary.lengths());

