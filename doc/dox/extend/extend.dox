namespace McMd
{

/*! \page extend_page Extending Simpatico

Users may extend the capabilities of Simpatico by writing new subclasses of a set of base classes that represent elements of a simulation. Different base class are used to represent molecular species, potential energy functions, diagnostics, file formats, and Monte Carlo or molecular dynamics algorithms.  A basic procedure for adding a new subclass involves three steps:
<ul>
  <li>Write a new C++ class that adds a new capability, which should be derived from one of the existing base classes. </li>
  <li>Incorporate the new class into the simpatico build system, so it can be compiled and linked into one or more executables. </li>
  <li>Modify the implementation of an associated Factory class, so that the parameter file block associated with the new class can be recognized when it appears as polymorphic block in the parameter file. 
</ul>
For larger projects, one can also  organize a set several related subclasses into a separate Module class that can be registered with the main program. Each of the these procedures is discussed in greater greater detail in the following subpages:
<ul>
  <li> \subpage inherit_page      "Base classes" 
  </li>
  <li> \subpage extend_build_page "Build system (adding new classes)" 
  </li>
  <li> \subpage factory_page      "Factory classes" 
  </li>
  <li> \subpage potentials_page   "Potential energies" 
  </li>
  <li> \subpage subfactory_page   "Subfactories" 
  </li>
  <li> \subpage module_page       "Module classes"
  </li>
</ul>

Navigation: 
<ul>
 <li> \ref custom_page       (Previous) </li>
 <li> \ref index             (Up)       </li>
 <li> \ref hoomd_page        (Next)     </li>
</ul>

*/
}
