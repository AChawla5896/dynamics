namespace McMd
{

/*! \page inherit_page Base Classes (Inheritance)

The mcSim and mdSim programs use several base classes that can be extended by users to implement new algorithms, molecular species, and file formats. Among these are:
<ul>
 <li> McMd::Species, which represents a molecular species. </li>
 <li> McMd::McMove, which represents a MC Markov move. </li>
 <li> McMd::MdIntegrator, which represents an MD integration algorithm. </li>
 <li> McMd::Diagnostic, which represents a data analysis or output operation. </li>
 <li> McMd::ConfigIo, which represents a configuration file format.</li>
 <li> McMd::TrajectoryIo, which represents an MD trajectory file format.</li>
 <li> McMd::Perturbation, which defines a free energy perturbation.</li>
</ul>
In order to implement, for instance, a new data analysis operation in mcSim and/or MdSim, the user must thus write a subclass of the McMd::Diagnostic base class.  

The ddSim parallel program uses a smaller set of base classes. These are defined in the DdMd namespace and have similar or identical names to analogous classes from the McMd namespace. These include;
<ul>
 <li> DdMd::Integrator, which represents a parallel MD integration algorithm. </li>
 <li> DdMd::Diagnostic, which represents a data analysis or output operation. </li>
 <li> DdMd::ConfigIo,   which represents a configuration file format.    </li>
</ul>
Implementations of subclasses of these DdMd classes generally involve interprocessor communication.

The McMd and DdMd namespaces each also contain a set of classes that represent different types of potential energy (pair, bond, angle, dihedral, etc). Users may extend these classes in order to introduce new functional forms for the various types of potential energy. The procedure for doing so is, however, somewhat different than that for other base classes listed above, and so is discussed separately \ref potentials_page "here".

Navigation: 
<ul>
 <li> \ref extend_page     (Up)       </li>
 <li> \ref extend_build_page    (Next)     </li>
</ul>

*/
}
