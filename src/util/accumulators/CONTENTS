The classes in this directory implement statistical accumulators that are useful
for data analysis.

  Average<Data>                  - Computes block and global averages, 
                                   variance, and error for a sequence of
                                   Data values. Uses a hierarchical 
                                   blocking algorithm to estimate errors.

  AutoCorrelation<Data, Product> - Computes an autocorrelation function for 
                                   a single sequence of Data values. Uses a
                                   hierarchical blocking algorithm to allow
                                   a large range of delay times.

  AutoCorr<Data, Product>        - Computes an autocorrelation function for 
                                   a single sequence of Data values. Uses a
                                   simple non-hierarchical algorithm.

  AutoCorrArray<Data, Product>   - Computes an autocorrelation function for 
                                   an ensemble of equivalent sequences of 
                                   Data values. 

  MeanSqDispArray<Data>          - Computes mean-square displacement for an 
                                   ensemble of equivalent sequences of Data 
                                   values.

  Distribution                   - accumulates a histogram of values for a 
                                   double precision variable.

  IntDistribution                - accumulates a histogram for an integer 
                                   variable.

  RadialDistribution             - accumulates a histogram of particle
                                   separations in a material.

In class templates AutoCorrelation, AutoCorr, and AutoCorrArray the Data
template parameter may be a floating point type (float or double), a complex 
type (complex<float> or complex<double>), a Vector, or a Tensor. The meaning
of the product is defined by the product() function template.  

The Product parameter in the templates AutoCorr and AutoCorrArray is the type for an inner product of two Data values. We require that Product be float, double, complex<float>, complex<double> or double when Data is float, double, std::complex<float>, std::complex<double>, Vector, or Tensor, respectively.  The inner product a*b is defined as a simple multiplication for real values, as conjg(a)*b when a and b are complex, as Euclidean inner product (dot product) for Vectors, and as summation products of corresponding elements for Tensor objects. These definitions are implemented by a set of overloaded functions defined in the file product.h.

In the class template MeanSqDispArray, the Data parameter may be floating point (real or double), complex, or Vector.  In the implementation of MeanSqDispArray, the square difference of two Data values is a double precision number that is defined for floating point, complex, and Vector Data types by the explicit specializations of the sqDiff() method.

See also: Util Accumulators module in the doxygen documentation.
