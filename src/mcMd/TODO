Improve Extensibility
---------------------

* Make main programs configurable (make _r versions)

* Make modules more convenient by adding protected methods
  to add subfactories.


Non-Orthorhombic Boundaries
---------------------------

- Add applyShift(Vector& r, IntVector &t) to boundary class.

- Use applyShift method in MSD diagnostic classes.

- Add tests for CellList specifically for Monoclinic Boundary.

- Add bool isOrthorhombic() method to Boundary classes.
  Use to test other classes that call Boundary::lengths().

- Find other uses of Boundary::lengths in McMd namespace.
  Add tests to cause crash before misuse, as needed.

- Make an example in a Monoclinic cell and try running it
  with mdSim and mcSim.

Non-rigid Boundaries
--------------------

- Generalize snapShot and obsolete pair list methods to deal 
  correctly / optimally with MD in deforming boundaries.

Angles and Dihedrals
--------------------

- Write and test HarmonicAngle class.

- Write and test MultiHarmonicDihedral class.

- Switch macros from, e.g., ifdef INTER_ANGLE to ifndef INTER_NO_ANGLE

- Change examples accordingly to work with code with everything enabled.

Constant Pressure
-----------------

- Write and test NptIntegrator subclass (Jens).

- Modify integrators to preserve ratios of unequal lengths.

New Commands
------------

- Allow diagnostics to be enabled, disabled, and cleared (reset accumulators) 
  from the command script. Add commands:

  ENABLE_DIAGNOSTICS 
  DISABLE_DIAGNOSTICS 
  CLEAR_DIAGNOSTICS 

  to enable, disable, or clear diagnostics.

Restart System
--------------

- Check restart system for parallel jobs.

Python File Tools:
------------------

- Tools for manipulating files and directories. We need scripts to:

  * Create standard directory structures for serial or parallel jobs.
  * Copy config and param files into a newly created directory structure.
  * Copy and move files to continue a run.

Testing
-------

- Test SET commands in command script.

- Add capacity for regression tests, using comparison to old files.

- More thorough tests of dihedral potentials.

Interface changes:
------------------

- Method names changes (possible):

  * If possible, remove moleculeId() and molecule(speciesId, moleculeId)
    methods of System.

File organization:
------------------

  * Move directory util/util to util/misc

  * Separate directories for observer, string, error, timer, misc

  * Move test code framework to tests directory


SubSystem base classes:
-----------------------

- Derive diagnostics from a public Diagnostic and a private (Mc|Mc|)SubSystem.

- Remove replace system().typePotential() by typePotential() in diagnostics 
  that are derived from a SubSystem class.

- Derive SystemMcMove from a protected McSubSystem.

- Remove replace system().typePotential() by typePotential() in mcMoves.

- Derive MdIntegrator from a protected MdSubSystem.

- Remove replace system().typePotential() by typePotential() in mdIntegrators


Interactions (Design Changes)
-----------------------------

Interactions:

- Make Interaction class apply to only one choice of type index / indices.
  Potential class would then hold an array of Interactions.

- Create << and >> operators for each Interaction class. 

- Change file format to read typeId (ids) << Interaction.

- Add a constructor to each potential that takes an Interaction as an
  argument. 

