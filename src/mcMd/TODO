New features:
-------------

- Write and test NptIntegrator subclass.

- Write and test HarmonicAngle class.

- Write and test MultiHarmonicDihedral class.

- Check restart system for parallel jobs.

New Commands
------------

- Add SET_... commands to command script parser.  Start with :
  SET_PAIR  (format defined by class)
  SET_BOND  (format defined by class), etc.

- Allow diagnostics to be enabled, disabled, and cleared (reset accumulators) 
  from the command script. Add commands:

  ENABLE_DIAGNOSTICS 
  DISABLE_DIAGNOSTICS 
  CLEAR_DIAGNOSTICS 

  to enable, disable, or clear diagnostic. Add ability to enable or
  disable specific diagnostics later.

Python File Tools:
------------------

- Tools for manipulating files and directories. We need scripts to:

  * Create standard directory structures for serial or parallel jobs.
  * Copy config and param files into a newly created directory structure.
  * Copy and move files to continue a run.

Testing
-------

- Add capacity for regression tests, using comparison to old files.

- More thorough tests of dihedral potentials.

Interface changes:
------------------

- Modify preprocessor macros so that the default version includes 
  angles and dihedrals, which can be excluded by defining 
  MCMD_NO_ANGLE and MCMD_NO_DIHEDRAL.

- Method names changes (possible):

  * If possible, remove moleculeId() and molecule(speciesId, moleculeId)
    methods of System.

  * Change iterator.atEnd() to iterator.isEnd()

- Source file names and locations:

  * Separate directories for observer, string, error, timer, misc

SubSystem base classes:
-----------------------

- Derive diagnostics from a public Diagnostic and a private (Mc|Mc|)SubSystem.

- Remove replace system().typePotential() by typePotential() in diagnostics 
  that are derived from a SubSystem class.

- Derive SystemMcMove from a protected McSubSystem.

- Remove replace system().typePotential() by typePotential() in mcMoves.

- Derive MdIntegrator from a protected MdSubSystem.

- Remove replace system().typePotential() by typePotential() in mdIntegrators

Design Changes
--------------

Interactions:

- Make Interaction class apply to only one choice of type index / indices.
  Potential class would then hold an array of Interactions.

- Create << and >> operators for each Interaction class. 

- Change file format to read typeId (ids) << Interaction.

- Add a constructor to each potential that takes an Interaction as an
  argument. 

Command Line Options
--------------------

- Move code to parse command line options into new setOptions()
  methods of McSimulation and MdSimulation.

